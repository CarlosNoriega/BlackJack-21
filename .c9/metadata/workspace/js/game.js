{"changed":true,"filter":false,"title":"game.js","tooltip":"/js/game.js","value":"/*TODO: \nvalidation:\n    check that player hands <= 21 otherwise block him\n    if Someone gets a 21 game ends and players wins\n    \n    check how to validate \"as\"\n    \n    \n    if (cardsInHand == 5 && points < 21  ) Player WINS, send correct notification to user\n    \n    \nvisual Feedback\n\n*/\n\n// Initialize Firebase\n\n\n\n\nvar config = {\n    apiKey: \"AIzaSyBhN1ahQIm8mA_27M6hJGgcPCeu26cPK3o\",\n    authDomain: \"unoonline-4629d.firebaseapp.com\",\n    databaseURL: \"https://unoonline-4629d.firebaseio.com\",\n    projectId: \"unoonline-4629d\",\n    storageBucket: \"unoonline-4629d.appspot.com\",\n    messagingSenderId: \"815742422602\"\n  };\n  firebase.initializeApp(config);\n\n\nvar suits = [\"Spades\", \"Clubs\", \"Diamonds\", \"Hearts\"];\nvar values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\nvar deck = new Array();\nvar players = new Array();\nvar turnNumber=0; //global turn in game\nvar numPlayers;\nvar indexForDeckInGame;\nvar initCanvas=true;\nvar myturn;\nvar myPoints;\nvar cardsInHand=0;\nvar firstTurnOfPlayer=true;\nvar numOfPass;\nvar gameHasWinner;\nvar isNotEnded= true;\nvar stealPlaying;\n\nfunction initApp() {\n    //geturl();\n    // Listening for auth state changes.\n    // [START authstatelistener]\n    firebase.auth().onAuthStateChanged(function(user) {\n      // [START_EXCLUDE silent]\n      // [END_EXCLUDE]\n      if (user) {\n\n        var displayName = user.displayName;\n        var email = user.email;\n        var emailVerified = user.emailVerified;\n        var photoURL = user.photoURL;\n        var isAnonymous = user.isAnonymous;\n        var uid = user.uid;\n        var providerData = user.providerData;\n        // [START_EXCLUDE silent]\n        \n        var userId = firebase.auth().currentUser.uid;\n        var po=0;\n        console.log(userId);\n        const dbRefObject=firebase.database().ref().child('games');\n         const game=dbRefObject.child(geturl());\n        const inte=game.child(\"integrantes\");\n        const tu=inte.child(userId);\n        tu.on('value', snapshot => {\n          myturn=snapshot.val().turn;\n          myPoints=snapshot.val().puntos;\n          stealPlaying=snapshot.val().play;\n          \n          \n        });\n        game.on('value', snapshot => {\n          var ds  = Object.keys(snapshot.val().integrantes).map(function (key) { return snapshot.val().integrantes[key]; });\n          console.log(snapshot.val());\n          console.log(ds)\n          players=ds;\n          numOfPass=snapshot.val().pasar;\n          deck=snapshot.val().deck;\n          gameHasWinner=snapshot.val().gano;\n          checkForWinners(snapshot.val().gano);\n          numPlayers=snapshot.val().cant;\n          turnNumber=(snapshot.val().turn)%numPlayers;\n          indexForDeckInGame=snapshot.val().indice;\n          if(numOfPass>=numPlayers){\n            firebase.database().ref('games/' + geturl() ).update({\n                gano : 1\n            });\n          }\n          \n        \n          if(isNotEnded)\n            updatePlayerTurnsGUI(ds);\n          \n          if(initCanvas){\n              startGameConstructor();\n              initCanvas=false;\n          }\n          \n          \n        });\n        \n        const userss=firebase.database().ref().child('users');\n        const us=userss.child(userId);\n        us.on('value', snapshot => {\n          //var ds  = Object.keys(snapshot.val().integrantes).map(function (key) { return snapshot.val().integrantes[key]; });\n          //console.log(snapshot.val().integrantes);\n          //console.log(ds)\n          //turnNumber=snapshot.val().turn;\n          //estado=snapshot.val().estado;\n          //cantida=snapshot.val().cant;\n          //go();\n          //imprime(ds);\n        });\n        if (!emailVerified) {\n        }\n        // [END_EXCLUDE]\n      } else {\n        console.log(\"no usuario\");\n        window.location='https://uno-marysolsnz.c9users.io/index.html';\n        // User is signed out.\n        // [START_EXCLUDE silent]\n        // [END_EXCLUDE]\n      }\n      // [START_EXCLUDE silent]\n      // [END_EXCLUDE]\n    });\n    // [END authstatelistener]\n    \n  }\n\nfunction checkForWinners(gamehaswinner) {\n    if(gamehaswinner==1){\n        finishGame();\n    }\n}\n\n\nfunction start() {\n    initApp(); //initializes instance of firebase\n    document.getElementById('passButton').style.visibility='hidden';\n}\n\nfunction updatePlayerTurnsGUI(playerArrays){\n    var s=\"\";\n    for(var i=0; i < playerArrays.length; i++){\n      if(playerArrays[i].turn == turnNumber){\n           s=s+'<p class=\"flow-text amber-text text-amber accent-3\">'+playerArrays[i].name+'</p>';\n      }else{\n          s=s+'<p class=\"flow-text white-text\">'+playerArrays[i].name+'</p>';\n      }\n    }\n    if(myturn==turnNumber){\n        if(stealPlaying){\n            checkIfPointsAreValid(myPoints);\n        }\n        toggleButtonsVisibility(true);\n    }else{\n        toggleButtonsVisibility(false);\n    }\n    \n    if(!stealPlaying){\n        //pass();\n    }\n    \n    document.getElementById('PlayersInGame').innerHTML=s;\n}\n\nfunction toggleButtonsVisibility(isMyturn){\n    \n    if(isMyturn){\n        if(stealPlaying){\n            document.getElementById('getCardButton').style.visibility='visible';\n        }else{\n            document.getElementById('getCardButton').style.visibility='hidden';\n        }\n        \n        if(!firstTurnOfPlayer){\n            document.getElementById('passButton').style.visibility='visible';\n        }\n    }\n    else{\n        document.getElementById('getCardButton').style.visibility='hidden';\n        document.getElementById('passButton').style.visibility='hidden';\n    }\n}\n\n\n\n//\nfunction updateFBIndex(ind){\n    console.log(deck);\n    firebase.database().ref('games/' + geturl() ).update({\n      indice : ind\n    });\n}\n\nfunction updateFBPassCount(ind){\n    //console.log(deck);\n    firebase.database().ref('games/' + geturl() ).update({\n      pasar : ind\n    });\n}\n\nfunction updateFBTurn(ind){\n    console.log(deck);\n    \n    firebase.database().ref('games/' + geturl() ).update({\n      turn : ind\n    });\n    \n    \n}\n\nfunction updateFBpoints(ind){\n    var userId = firebase.auth().currentUser.uid;\n    firebase.database().ref('games/' + geturl() + \"/integrantes/\" + userId).update({\n      puntos : ind\n    });\n}\n\nfunction updateNumberOfCards(ind){\n    var userId = firebase.auth().currentUser.uid;\n    firebase.database().ref('games/' + geturl() + \"/integrantes/\" + userId).update({\n      puntos : ind\n    });\n}\n\n//takeID for game\nfunction geturl(){\n    //var first = getUrlVars()[\"name\"];\n    //console.log(first);\n   var query = location.search.substr(1);\n   var result = {};\n   query.split(\"&\").forEach(function(part) {\n   var item = part.split(\"=\");\n   result[item[0]] = decodeURIComponent(item[1]);\n   });\n   console.log(result.name);\n   return result.name;\n}\n\n//this can be deleted in a future\nfunction startDemo (){\n   // dealHands();\n}\n\n//gives two cards to player in first turn\nfunction dealHands() {\n    \n    playGame.prototype.initialDrawAnimation(indexForDeckInGame,0);\n    for (var i = 0; i < 2; i++) {\n        var card = deck[indexForDeckInGame];\n        indexForDeckInGame--;\n        updateFBIndex(indexForDeckInGame);\n        var puntos=card.Card_val+myPoints;\n        cardsInHand++;\n        updateFBpoints(puntos);\n        if(puntos==21 || (cardsInHand > 4 && puntos<22)){\n                firebase.database().ref('games/' + geturl() ).update({\n                    gano : 1\n                });\n            }\n    }\n    changeTurn();\n}\n\n//gives a card to user\nfunction hit() {\n    if(myturn==turnNumber){\n        if(firstTurnOfPlayer){\n            dealHands();\n            firstTurnOfPlayer=false;\n        }else{\n            updateFBPassCount(0);\n            var card = deck[indexForDeckInGame];\n            playGame.prototype.getCardAnimationRemote(indexForDeckInGame, cardsInHand);\n            indexForDeckInGame--;\n            cardsInHand++;\n            updateFBIndex(indexForDeckInGame);\n            var puntos=card.Card_val+myPoints;\n            console.log(card)\n            updateFBpoints(puntos);\n            if(puntos==21 || (cardsInHand > 4 && puntos<22) ){\n                firebase.database().ref('games/' + geturl() ).update({\n                    gano : 1\n                });\n            }\n            \n            changeTurn();\n        }\n    }\n}\n\nfunction exit(){\n    if (confirm(\"Are you sure you whant to leave? \") == true) {\n        firebase.database().ref('games/' + geturl() ).update({\n            gano : 1\n        });\n    } else {\n        console.log(\"cobarde\");\n    }\n    \n}\n\n\nfunction pass(){\n    \n    firebase.database().ref('games/' + geturl() ).update({\n      turn : turnNumber+1\n    });\n    firebase.database().ref('games/' + geturl() ).update({\n      pasar : numOfPass+1\n    });\n}\n\nfunction changeTurn(){\n    if(myturn==turnNumber){\n        updateFBTurn(turnNumber+1);\n    }\n}\n\nfunction finishGame() {\n    if(isNotEnded){\n        var userId = firebase.auth().currentUser.uid;\n        var winner = -1;\n        var score = 0;\n        var winwhit5=false;\n        var youwin=false;\n        for (var i = 0; i < players.length; i++) {\n            if (players[i].puntos > score && players[i].puntos <= 21) {\n                winner = i;\n                score = players[i].puntos;\n            }\n            if(players[i].puntos<21 && cardsInHand>4 && players[i].id==userId){\n                winner=i;\n                winwhit5=true;\n                score=players[i].puntos;\n                youwin=true;\n            }\n        }\n        \n        if(winner==-1){\n            updateFBScore(10);\n            console.log(\"Todos pierden\");\n            alert(\"Nobody wins\");\n        }else{\n            if(!winwhit5){\n                for(var i = 0; i < players.length; i++){\n                    if(players[i].puntos==players[winner].puntos && userId==players[i].id){\n                        youwin=true;\n                    }\n                }\n            }\n            if(winwhit5){\n                updateFBScore(50);\n                console.log(\"Ganaste con msa de 5 cartas.\");\n                alert(\"You win whit \"+players[winner].puntos+ \" points and 5 cards.\");\n            }else{\n                if(youwin){//ganaste\n                    updateFBScore(50);\n                    console.log(\"Ganaste con \"+players[winner].puntos + \" puntos.\");\n                    alert(\"You win whit \"+players[winner].puntos+ \" points.\");\n                }\n                else{\n                    updateFBScore(10);\n                    console.log(\"Perdiste, ganó \"+players[winner].name+\" con \"+players[winner].puntos + \" puntos.\");\n                    alert(\"You lost, \"+players[winner].name+\" won whit \"+players[winner].puntos + \" points.\"); \n                }\n            }\n        }\n        firebase.database().ref('games/' + geturl() ).update({\n            gano : 1\n        });\n        isNotEnded=false;\n        toggleButtonsVisibility(false);\n        window.location='https://uno-marysolsnz.c9users.io/mainMenu.html';\n    }\n}\n\nfunction updateFBScore(pointsToBeAdded){\n    var userId = firebase.auth().currentUser.uid;\n    const userss=firebase.database().ref().child('users');\n    const us=userss.child(userId);\n    us.on('value', snapshot => {\n      pointsToBeAdded=snapshot.val().score+pointsToBeAdded;\n    });\n    \n    var userId = firebase.auth().currentUser.uid;\n    firebase.database().ref('users/' + userId ).update({\n      score : pointsToBeAdded\n    });\n}\n\nfunction updateStealPlaying(play) {\n    var userId = firebase.auth().currentUser.uid;\n    firebase.database().ref('games/' + geturl() + \"/integrantes/\" + userId).update({\n      play : play\n    });\n}\n\nfunction checkIfPointsAreValid(p) {\n    console.log(\"Puntos ------------------\"+p)\n    if (p > 21) {\n        console.log(\"salte--------------------------------------------------------\")\n       updateStealPlaying(false);\n    }\n}\n\n\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":387,"column":0},"end":{"row":387,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1493665806036}